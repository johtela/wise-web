Html/Event«import«Html/Collection», ---«"## Events

The Event interface represents an event which takes place on an EventTarget.

An event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the progress of an asynchronous task. It can also be triggered programmatically, such as by calling the `HTMLElement.click()` method of an element, or by defining the event, then sending it to a specified target using `EventTarget.dispatchEvent()`.

There are many types of events, some of which use other interfaces based on the main Event interface. Event itself contains the properties and methods which are common to all events."», type«object«Event«a», bubbles«Bool, get», cancelBubble«Bool, get, set», cancelable«Bool, get», composed«Bool, get», currentTarget«?«a», get», defaultPrevented«Bool, get», eventPhase«Number, get», isTrusted«Bool, get», target«?«a», get», type«String, get», preventDefault«->«Unit, Unit»», stopImmediatePropagation«->«Unit, Unit»», stopPropagation«->«Unit, Unit»»», object«UIEvent«a», extends«Event«a»», detail«Number, get»», object«MouseEvent«a», extends«UIEvent«a»», altKey«Bool, get», button«Number, get», buttons«Number, get», clientX«Number, get», clientY«Number, get», ctrlKey«Bool, get», metaKey«Bool, get», movementX«Number, get», movementY«Number, get», offsetX«Number, get», offsetY«Number, get», PageX«Number, get», PageY«Number, get», relatedTarget«EventTarget», screenX«Number, get», screenY«Number, get», shiftKey«Bool, get»», ---«"Data transfer objects used in the input event."», object«DataTransferItem, kind«String, get», type«String, get», getAsString«->«->«String, Unit», Unit»»», object«DataTransterItemList, extends«CollectionBase«DataTransferItem»», add«->«String, String, DataTransferItem»», clear«Unit», remove«->«Number, Unit»»», object«DataTransfer, dropEffect«String, get, set», effectAllowed«String, get, set», items«DataTransterItemList, get», types«[«String», get», clear«->«?«String», Unit»», getData«->«String, String»», setData«->«String, String, Unit»»», object«InputEvent«a», extends«UIEvent«a»», data«String, get», dataTransfer«DataTransfer, get», inputType«String, get», isComposing«Bool, get»», object«FocusEvent«a», extends«UIEvent«a»», relatedTarget«EventTarget»», object«ClipboardEvent«a», extends«UIEvent«a»», clipboardData«DataTransfer, get»», object«KeyboardEvent«a», extends«UIEvent«a»», altKey«Bool, get», code«String, get», ctrlKey«Bool, get», isComposing«Bool, get», key«String, get», location«Number, get», metaKey«Bool, get», repeat«Bool, get», shiftKey«Bool, get», getModifierState«->«String, Bool»»», object«WheelEvent«a», extends«MouseEvent«a»», deltaX«Number, get», deltaY«Number, get», deltaZ«Number, get», deltaMode«Number, get»», ---«"The EventTarget interface is implemented by objects that can receive events and may have listeners for them. In other words, any target of events implements the three methods associated with this interface."», alias«EventListener«a», ->«a, Unit»», object«EventTarget, addEventListener«->«String, EventListener«a», Unit»», removeEventListener«->«String, EventListener«a», Unit»», dispatchEvent«->«Event«a», Bool»»»»»