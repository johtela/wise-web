Html/Element«import«Data/Array», type«object«CollectionBase«a», length«Number, get», item«->«Number, a»»», object«DOMTokenList, extends«CollectionBase«String»», value«String, get», add«->«[«String», Unit»», contains«->«String, Bool»», remove«->«[«String», Unit»», replace«->«String, String, Bool»», toggle«->«String, Bool»», forEach«->«->«String, Number, Unit», Unit»»», object«NamedCollection«a», extends«CollectionBase«a»», namedItem«->«String, ?«a»»»», object«Event«a», bubbles«Bool, get», cancelBubble«Bool, get, set», cancelable«Bool, get», composed«Bool, get», currentTarget«?«a», get», defaultPrevented«Bool, get», eventPhase«Number, get», isTrusted«Bool, get», target«?«a», get», type«String, get», preventDefault«->«Unit, Unit»», stopImmediatePropagation«->«Unit, Unit»», stopPropagation«->«Unit, Unit»»», alias«EventListener«a», ->«Event«a», Unit»», object«Element, localName«String, get», id«String, get», classList«DOMTokenList, get», clientLeft«Number, get», clientTop«Number, get», clientHeight«Number, get», clientWidth«Number, get», innerHTML«String, get, set», outerHTML«String, get, set», innerText«String, get, set», textContent«String, get, set», prefix«String, get, set», scrollHeight«Number, get», scrollWidth«Number, get», scrollLeft«Number, get, set», scrollTop«Number, get, set», children«NamedCollection«Element»», setAttribute«->«String, String, Unit»», append«->«Element, Unit»», addEventListener«->«String, EventListener«Element», Unit»», removeEventListener«->«String, EventListener«Element», Unit»»», object«InputElement, extends«Element», value«String, get, set»», data«ElemAttr, |«.attr«String, String», .event«String, EventListener«Element»»»», object«Window, alert«->«String, Unit»»»», instance«Indexed«CollectionBase, @length«->>«coll, :«CollectionBase, .length«coll»»»», @«->>«coll, i, :«CollectionBase, .item«coll, i»»»»»», define«_window«Window, asm«`window`»», _body«Element, asm«`document.body`»», _createElement«->>«String, Element», ->>«name, asm«`document.createElement(`, name, `)`»»», setElemAttrs«->«Element, [«ElemAttr», Unit», ->«element, attributes, @foreach«attributes, ->>«attr, _, match«attr, |«.attr«name, value», :«Element, .setAttribute«element, name, value»»», |«.event«ev, listen», :«Element, .addEventListener«element, ev, listen»»»»»»»», elem«->«String, [«ElemAttr», [«Element», Element», ->«name, attrs, children, do«let«res, _createElement«name»», setElemAttrs«res, attrs», @foreach«children, ->>«e, _, :«Element, .append«res, e»»»», res»»», textElem«->«name, attrs, text, do«let«res, _createElement«name»», setElemAttrs«res, attrs», :«Element, .textContent.set«res, text»», res»»», <span>«->>«attrs, children, elem«"span", attrs, children»»», <input>«->>«[«ElemAttr», InputElement», ->>«attrs, :«InputElement, <Element«elem«"input", attrs, [»»»»», <button>«->>«attrs, caption, textElem«"button", attrs, caption»»», .id«->>«name, .attr«"id", name»»», .type«->>«name, .attr«"type", name»»», .click«->>«listen, .event«"click", listen»»»»»