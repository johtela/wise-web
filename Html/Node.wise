Html/Node«import«Data/Dictionary, Html/Collection, Html/Event», type«---«"## Node

The DOM Node interface is an abstract base class upon which many other DOM API objects are based, thus letting those object types to be used similarly and often interchangeably. As an abstract class, there is no such thing as a plain Node object. All objects that implement Node functionality are based on one of its subclasses. Most notable are Document, Element, and DocumentFragment."», object«Node, extends«EventTarget», DOCUMENT_POSITION_DISCONNECTED«Number, get, static», DOCUMENT_POSITION_PRECEDING«Number, get, static», DOCUMENT_POSITION_FOLLOWING«Number, get, static», DOCUMENT_POSITION_CONTAINS«Number, get, static», DOCUMENT_POSITION_CONTAINED_BY«Number, get, static», DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC«Number, get, static», baseURI«String, get», childNodes«NodeList«Node», get», firstChild«?«Node», get», isConnected«Bool, get», lastChild«?«Node», get», nextSibling«?«Node», get», nodeName«String, get», nodeType«Number, get», nodeValue«?«String», get, set», ownerDocument«?«Document», get», parentNode«?«Node», get», parentElement«?«Element», get», previousSibling«?«Node», get», textContent«?«String», get, set», appendChild«->«Node, Node»», cloneNode«->«Bool, Node»», compareDocumentPosition«->«Node, Number»», contains«->«Node, Bool»», getRootNode«->«{«composed«Bool»», ?«Node»»», hasChildNodes«Bool», insertBefore«->«Node, Node, Node»», isDefaultNamespace«->«String, Bool»», isEqualNode«->«Node, Bool»», isSameNode«->«Node, Bool»», lookupPrefix«->«String, ?«String»»», lookupNamespaceURI«->«String, ?«String»»», normalize«Unit», removeChild«->«Node, Node»», replaceChild«->«Node, Node, Node»»», ---«"Document and Element objects are declared here but their members are defined in their own modules."», object«Document, extends«Node»», object«Element, extends«Node»»»»