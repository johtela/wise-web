Css/Font«import«Control/Async¸ Html/Event»¸ type«---«"## FontFace



The FontFace interface of the CSS Font Loading API represents a single usable font face.

This interface defines the source of a font face¸ either a URL to an external resource or a buffer¸ and font properties such as style¸ weight¸ and so on. For URL font sources it allows authors to trigger when the remote font is fetched and loaded¸ and to track loading status."»¸ object«FontFace¸ ascentOverride«String¸ get¸ set»¸ descentOverride«String¸ get¸ set»¸ display«String¸ get¸ set»¸ family«String¸ get¸ set»¸ featureSettings«String¸ get¸ set»¸ lineGapOverride«String¸ get¸ set»¸ loaded«Promise«Unit»¸ get»¸ status«String¸ get»¸ stretch«String¸ get¸ set»¸ style«String¸ get¸ set»¸ unicodeRange«String¸ get¸ set»¸ weight«String¸ get¸ set»¸ load«Promise«Unit»»»¸ ---«"## FontFaceSet



The FontFaceSet interface of the CSS Font Loading API manages the loading of font-faces and querying of their download status.

A FontFaceSet instance is a Set-like object that can hold an ordered set of FontFace objects."»¸ object«FontFaceSet¸ extends«EventTarget»¸ ready«Promise«Unit»¸ get»¸ size«Number¸ get»¸ status«String¸ get»¸ add«->«FontFace¸ FontFaceSet»»¸ check«->«String¸ ?«String»¸ Bool»»¸ clear«Unit»¸ delete«->«FontFace¸ Bool»»¸ entries«Iterable«(«String¸ FontFace»»»¸ forEach«->«->«(«String¸ FontFace»¸ Number¸ Unit»¸ Unit»»¸ has«->«FontFace¸ Bool»»¸ keys«Iterable«FontFace»»¸ load«->«String¸ ?«String»¸ Promise«[«FontFace»»»»¸ values«Iterable«FontFace»»¸ onloading«EventListener«Event«FontFaceSet»»¸ get»¸ onloadingdone«EventListener«Event«FontFaceSet»»¸ get»¸ onloadingerror«EventListener«Event«FontFaceSet»»¸ get»»»»